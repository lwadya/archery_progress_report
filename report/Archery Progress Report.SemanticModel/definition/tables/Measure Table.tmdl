/// Empty table used for storing all report measures
table 'Measure Table'
	excludeFromModelRefresh
	lineageTag: e06aa0ae-6b63-4802-b6e2-30fd7ea315c9

	measure 'Shot Score Average' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-10-09
			// Description:     Average score of all selected shots
			
			AVERAGE( fact_shot_score[score_end_average] )
		formatString: 0.0
		displayFolder: Score
		lineageTag: edf13954-720e-48a5-ba68-bd7384bdea2e

	measure 'Shot Score Rolling Average Sessions' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-26
			// Description:     Rolling average score across sessions for all selected shots
			
			VAR _session_window = 5
			
			VAR _latest_session_id = MAX( dim_session[session_id] )
			
			VAR _earliest_session_id = _latest_session_id - _session_window + 1
			
			VAR _rolling_average =
			CALCULATE(
			    [Shot Score Average],
			    FILTER(
			        ALL( dim_session ),
			        dim_session[session_id] >= _earliest_session_id && 'dim_session'[session_id] <= _latest_session_id
			    )
			)
			
			VAR _result =
			IF(
			    _earliest_session_id >= 1,
			    _rolling_average
			)
			
			RETURN _result
		formatString: 0.0
		displayFolder: Score
		lineageTag: c3457a91-fee8-44fd-826a-36232c6d55ee

	measure 'Shot Count' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-08-29
			// Description:     Count of shots
			
			COUNTROWS( fact_shot_score )
		formatString: #,0
		displayFolder: Shot
		lineageTag: 21936e43-5cf6-4ee0-8164-46334dea594a

	measure 'Round Score Average' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-28
			// Description:     Average round score for all selected shots
			
			AVERAGEX(
			    fact_shot_score,
			    [Round Score]
			)
		formatString: 0
		displayFolder: Score
		lineageTag: 0fc71b9c-19cc-4aaa-bfe2-d72aca981feb

	measure 'Shot Count Selected Sessions' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-10-09
			// Description:     Total count of shots for selected sessions
			
			SUM( dim_session[session_shot_count] )
		formatString: 0
		displayFolder: Shot
		lineageTag: 8c24f062-e816-497b-b392-b30fcccc303d

	measure 'Shot Percentage' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-09-08
			// Description:     Selected shots as a percentage of selected sessions
			
			DIVIDE(
			    [Shot Count],
			    [Shot Count Selected Sessions]
			)
		formatString: 0.0%;-0.0%;0.0%
		displayFolder: Shot
		lineageTag: 9fb8690f-c78c-4ce0-9944-ce339cc26558

	measure 'Session ID as Percentage' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-10-09
			// Description:     Percentage of progress through all sessions
			
			VAR _current_session_id = MAX( 'dim_session'[session_id] )
			
			VAR _total_sessions =
			COUNTROWS(
			    ALL( 'dim_session' )
			)
			
			VAR _result =
			DIVIDE(
			    _current_session_id,
			    _total_sessions
			)
			
			RETURN _result
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: _DELETE
		lineageTag: 8e43940f-2ba4-473d-a7ca-7113b1fa4ccd

	measure 'End Count' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-20
			// Description:     Count of ends
			
			DISTINCTCOUNT( fact_shot_score[end] )
		formatString: #,0
		displayFolder: End
		lineageTag: 7ed5ffc0-eb90-4eb8-9a92-56c24da1df70

	measure 'Session ID Min' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-11-08
			// Description:     Min session_id value for selected sessions
			
			MIN( dim_session[session_id] )
		formatString: 0
		displayFolder: Session
		lineageTag: 31d29bbe-3c75-47f2-ba72-ed94353d7b20

	measure 'Session ID Max' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-11-08
			// Description:     Max session_id value for selected sessions
			
			MAX( dim_session[session_id] )
		formatString: 0
		displayFolder: Session
		lineageTag: 697ae780-a074-40ae-a780-d34514a361ad

	measure 'Session Count' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-23
			// Description:     Count of selected dim_session rows
			
			COUNTROWS( dim_session )
		formatString: #,0
		displayFolder: Session
		lineageTag: fc368630-612a-4a05-b6ac-2b39facfdf35

	measure 'Round Score Max' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-28
			// Description:     Max round score for all selected shots
			
			MAXX(
			    fact_shot_score,
			    [Round Score]
			)
		formatString: 0
		displayFolder: Score
		lineageTag: ae9066ce-e793-414d-a28b-58d944daafb2

	measure 'Round Score' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-28
			// Description:     Round score for last n selected shots
			
			VAR _round_shot_count = [round_shot_count_value]
			
			VAR _result =
			CALCULATE(
			    IF(
			        MAX( fact_shot_score[session_shot_id] ) >= _round_shot_count,
			        SUM( fact_shot_score[score_end_average] )
			    ),
			    FILTER(
			        ALL( fact_shot_score ),
			        fact_shot_score[shot_id] <= MAX( fact_shot_score[shot_id] )
			            && fact_shot_score[shot_id] > MAX( fact_shot_score[shot_id] ) - _round_shot_count
			            && fact_shot_score[session_id] = MAX( fact_shot_score[session_id] )
			    )
			)
			
			RETURN _result
		formatString: 0
		displayFolder: Score
		lineageTag: c2b388a6-a127-4e63-8611-30846c1fea4f

	measure 'Shot Score Standard Deviation' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-01
			// Description:     Standard deviation of all selected shots
			
			STDEV.P( fact_shot_score[score] )
		formatString: 0.0
		displayFolder: _DELETE
		lineageTag: c518d8ed-1543-42b5-8a12-84720986cd04

	measure 'Round Score Min' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-28
			// Description:     Min round score for all selected shots
			
			MINX(
			    fact_shot_score,
			    [Round Score]
			)
		formatString: 0
		displayFolder: Score
		lineageTag: 36547374-7101-4b34-b3ca-e9444d9b0cd8

	measure 'Shot Score Session Percentage Rank' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-8
			// Description:     Session rank by average shot score out of selected sessions
			
			VAR _selected_dates = VALUES( dim_calendar[date] )
			VAR _selected_value = [Shot Score Average]
			
			VAR _num_dates =
			CALCULATE(
			    COUNTROWS( dim_session ),
			    ALL( dim_session ),
			    TREATAS( _selected_dates, dim_session[date] )
			)
			
			VAR _selected_rank =
			CALCULATE(
			    RANK.EQ(
			        _selected_value,
			        dim_session[session_score_average]
			    ),
			    ALL( dim_session ),
			    TREATAS( _selected_dates, dim_session[date] )
			)
			
			VAR _result =
			IF(
			    NOT( ISBLANK( _selected_value ) ),
			    1 - DIVIDE(
			        _selected_rank - 1,
			        _num_dates - 1
			    )
			)
			
			RETURN _result
		formatString: 0%;-0%;0%
		displayFolder: Score
		lineageTag: 57a44a7f-5765-4f8e-98bb-31f01da67285

	measure 'Round Score 30 2' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-22
			// Description:     30-shot round score for last 30 selected shots
			
			VAR _round_shot_count = 30
			VAR _latest_session_id = MAX( fact_shot_score[session_id] )
			
			VAR _result =
			CALCULATE(
			    IF(
			        MAX( fact_shot_score[session_shot_id] ) >= _round_shot_count,
			        SUM( fact_shot_score[score_end_average] )
			    ),
			    WINDOW(
			        1 - _round_shot_count, REL,
			        0, REL,
			        FILTER(
			            ALL( fact_shot_score ),
			            fact_shot_score[session_id] = _latest_session_id
			        ),
			        ORDERBY( fact_shot_score[shot_id] ),
			        PARTITIONBY( fact_shot_score[session_id] ),
			        MATCHBY( fact_shot_score[shot_id] )
			    )
			)
			
			RETURN
			_result
		formatString: 0
		displayFolder: _DELETE
		lineageTag: 6281b985-9b71-4dc7-837e-2e4815568739

	measure 'Shot Score Rolling Average Shots' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-26
			// Description:     Rolling average score of last n shots
			
			VAR _shot_window = 5
			
			VAR _latest_shot_id = MAX( fact_shot_score[session_shot_id] )
			
			VAR _rolling_average =
			CALCULATE(
			    [Shot Score Average],
			    WINDOW(
			        1 - _shot_window, REL,
			        0, REL,
			        ALLSELECTED( fact_shot_score[session_shot_id] ),
			        ORDERBY( fact_shot_score[session_shot_id] )
			    )
			)
			
			VAR _result =
			IF(
			    _latest_shot_id >= _shot_window,
			    _rolling_average
			)
			
			RETURN _result
		formatString: 0.0
		displayFolder: Score
		lineageTag: 6067fd42-8eef-4625-accc-002321a30470

	measure 'Day of Week' =
			
			WEEKDAY( SELECTEDVALUE( dim_session[date] ) )
		displayFolder: _DELETE
		lineageTag: 6ce24da6-d87e-4e98-958d-8567755b3d28

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Rolling Average Difference' =
			
			VAR _current_value = [Shot Score Rolling Average Shots]
			VAR _current_shot_id = MAX( fact_shot_score[session_shot_id] )
			
			VAR _next_value =
			CALCULATE(
			    [Shot Score Rolling Average Shots],
			    FILTER(
			        ALL( fact_shot_score ),
			        fact_shot_score[session_shot_id] = _current_shot_id + 1
			    )
			)
			
			VAR _result =
			IF(
			    NOT( ISBLANK( _current_value ) ) && NOT( ISBLANK( _next_value ) ),
			    _next_value - _current_value
			)
			
			RETURN _result
		formatString: 0.0
		displayFolder: _DELETE
		lineageTag: 1a4b23f0-8e9a-4fa0-be4f-11ca7eaa3434

	measure 'Rolling Meets Session Average Shot ID Min' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-27
			// Description:     The first session shot id for selected sessions where the rolling average meets or exceeds the full session average shot score
			
			VAR _shot_id_benchmark_table =
			FILTER(
			    ADDCOLUMNS(
			        VALUES( fact_shot_score[session_shot_id] ),
			        "rolling_meets_session_average", [Shot Score Rolling Average Shots] >= CALCULATE( [Shot Score Average], ALLSELECTED( fact_shot_score[session_shot_id] ) )
			    ),
			    [rolling_meets_session_average] == TRUE
			)
			
			VAR _result =
			MINX(
			    _shot_id_benchmark_table,
			    [session_shot_id]
			)
			
			RETURN _result
		formatString: 0
		displayFolder: Shot
		lineageTag: 01ef077e-48dd-49f4-82f1-7a76a1a12f3a

	measure 'Rolling Meets Session Average Shot ID Max' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-27
			// Description:     The last session shot id for selected sessions where the rolling average meets or exceeds the full session average shot score
			
			VAR _shot_id_benchmark_table =
			FILTER(
			    ADDCOLUMNS(
			        VALUES( fact_shot_score[session_shot_id] ),
			        "rolling_meets_session_average", [Shot Score Rolling Average Shots] >= CALCULATE( [Shot Score Average], ALLSELECTED( fact_shot_score[session_shot_id] ) )
			    ),
			    [rolling_meets_session_average] == TRUE
			)
			
			VAR _result =
			MAXX(
			    _shot_id_benchmark_table,
			    [session_shot_id]
			)
			
			RETURN _result
		formatString: 0
		displayFolder: Shot
		lineageTag: ae836bad-5516-41c3-a451-e253840f2de2

	measure 'Session Rank' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-28
			// Description:     Session rank by highest session average shot score
			
			RANK(
			    SKIP,
			    ALL( dim_session ),
			    ORDERBY( [Round Score Average], DESC BLANKS LAST, dim_session[session_id], DESC BLANKS LAST )
			    --ORDERBY( dim_session[session_score_average], DESC BLANKS LAST )
			)
		formatString: 0
		displayFolder: Session
		lineageTag: 7819e57a-ac6d-42f6-936b-41474bf992ce

	partition 'Measure Table' = m
		mode: import
		queryGroup: 'Table Queries'
		source = #table( {}, {} )

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

