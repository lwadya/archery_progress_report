/// Empty table used for storing all report measures
table 'Measure Table'
	excludeFromModelRefresh
	lineageTag: e06aa0ae-6b63-4802-b6e2-30fd7ea315c9

	measure 'Shot Score Average' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-10-09
			// Description:     Average score of all selected shots
			
			AVERAGE( fact_shot_score[score_end_average] )
		formatString: 0.0
		displayFolder: Shot
		lineageTag: edf13954-720e-48a5-ba68-bd7384bdea2e

	measure 'Shot Score Rolling Average Sessions' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-26
			// Description:     Rolling average score across sessions for all selected shots
			
			VAR _session_window = 5
			
			VAR _latest_session_id = MAX( dim_session[session_id] )
			
			VAR _earliest_session_id = _latest_session_id - _session_window + 1
			
			VAR _rolling_average =
			CALCULATE(
			    [Shot Score Average],
			    FILTER(
			        ALL( dim_session ),
			        dim_session[session_id] >= _earliest_session_id && 'dim_session'[session_id] <= _latest_session_id
			    )
			)
			
			VAR _result =
			IF(
			    _earliest_session_id >= 1,
			    _rolling_average
			)
			
			RETURN _result
		formatString: 0.0
		displayFolder: Shot
		lineageTag: c3457a91-fee8-44fd-826a-36232c6d55ee

	measure 'Shot Count' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-08-29
			// Description:     Count of shots
			
			COUNTROWS( fact_shot_score )
		formatString: #,0
		displayFolder: Shot
		lineageTag: 21936e43-5cf6-4ee0-8164-46334dea594a

	measure 'Round Score Average' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-30
			// Description:     Average round score across all rounds of n shots
			
			VAR _round_shot_count = SELECTEDVALUE( select_round_type[shot_count] )
			
			VAR _result =
			AVERAGEX(
			    FILTER(
			        fact_shot_score,
			        fact_shot_score[session_shot_id] >= _round_shot_count
			    ),
			    CALCULATE(
			        SUM( fact_shot_score[score_end_average] ),
			        ALL( fact_shot_score ),
			        WINDOW(
			            1 - _round_shot_count, REL,
			            0, REL,
			            ALLEXCEPT( fact_shot_score, fact_shot_score[session_id] ),
			            ORDERBY( fact_shot_score[shot_id] )
			        )
			    )
			)
			
			RETURN _result
		displayFolder: Round
		lineageTag: 0fc71b9c-19cc-4aaa-bfe2-d72aca981feb

		formatStringDefinition = SELECTEDVALUE( select_round_type[display_format] )

	measure 'Shot Count Selected Sessions' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-10-09
			// Description:     Total count of shots for selected sessions
			
			SUM( dim_session[session_shot_count] )
		formatString: 0
		displayFolder: Shot
		lineageTag: 8c24f062-e816-497b-b392-b30fcccc303d

	measure 'Shot Percentage' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-09-08
			// Description:     Selected shots as a percentage of selected sessions
			
			DIVIDE(
			    [Shot Count],
			    [Shot Count Selected Sessions]
			)
		formatString: 0.0%;-0.0%;0.0%
		displayFolder: Shot
		lineageTag: 9fb8690f-c78c-4ce0-9944-ce339cc26558

	measure 'End Count' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-20
			// Description:     Count of ends
			
			DISTINCTCOUNT( fact_shot_score[end] )
		formatString: #,0
		displayFolder: End
		lineageTag: 7ed5ffc0-eb90-4eb8-9a92-56c24da1df70

	measure 'Session ID Min' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-11-08
			// Description:     Min session_id value for selected sessions
			
			MIN( dim_session[session_id] )
		formatString: 0
		displayFolder: Session
		lineageTag: 31d29bbe-3c75-47f2-ba72-ed94353d7b20

	measure 'Session ID Max' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-11-08
			// Description:     Max session_id value for selected sessions
			
			MAX( dim_session[session_id] )
		formatString: 0
		displayFolder: Session
		lineageTag: 697ae780-a074-40ae-a780-d34514a361ad

	measure 'Session Count' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-23
			// Description:     Count of selected dim_session rows
			
			COUNTROWS( dim_session )
		formatString: #,0
		displayFolder: Session
		lineageTag: fc368630-612a-4a05-b6ac-2b39facfdf35

	measure 'Round Score Max' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-30
			// Description:     Max round score across all rounds of n shots
			
			VAR _round_shot_count = SELECTEDVALUE( select_round_type[shot_count] )
			
			VAR _result =
			MAXX(
			    FILTER(
			        fact_shot_score,
			        fact_shot_score[session_shot_id] >= _round_shot_count
			    ),
			    CALCULATE(
			        SUM( fact_shot_score[score_end_average] ),
			        ALL( fact_shot_score ),
			        WINDOW(
			            1 - _round_shot_count, REL,
			            0, REL,
			            ALLEXCEPT( fact_shot_score, fact_shot_score[session_id] ),
			            ORDERBY( fact_shot_score[shot_id] )
			        )
			    )
			)
			
			RETURN _result
		displayFolder: Round
		lineageTag: ae9066ce-e793-414d-a28b-58d944daafb2

		formatStringDefinition = SELECTEDVALUE( select_round_type[display_format] )

	measure 'Round Score Min' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-30
			// Description:     Min round score across all rounds of n shots
			
			VAR _round_shot_count = SELECTEDVALUE( select_round_type[shot_count] )
			
			VAR _result =
			MINX(
			    FILTER(
			        fact_shot_score,
			        fact_shot_score[session_shot_id] >= _round_shot_count
			    ),
			    CALCULATE(
			        SUM( fact_shot_score[score_end_average] ),
			        ALL( fact_shot_score ),
			        WINDOW(
			            1 - _round_shot_count, REL,
			            0, REL,
			            ALLEXCEPT( fact_shot_score, fact_shot_score[session_id] ),
			            ORDERBY( fact_shot_score[shot_id] )
			        )
			    )
			)
			
			RETURN _result
		displayFolder: Round
		lineageTag: 36547374-7101-4b34-b3ca-e9444d9b0cd8

		formatStringDefinition = SELECTEDVALUE( select_round_type[display_format] )

	measure 'Shot Score Rolling Average Shots' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-26
			// Description:     Rolling average score of last n shots
			
			VAR _shot_window = 5
			
			VAR _latest_shot_id = MAX( fact_shot_score[session_shot_id] )
			
			VAR _rolling_average =
			CALCULATE(
			    [Shot Score Average],
			    WINDOW(
			        1 - _shot_window, REL,
			        0, REL,
			        ALLSELECTED( fact_shot_score[session_shot_id] ),
			        ORDERBY( fact_shot_score[session_shot_id] )
			    )
			)
			
			VAR _result =
			IF(
			    _latest_shot_id >= _shot_window,
			    _rolling_average
			)
			
			RETURN _result
		formatString: 0.0
		displayFolder: Shot
		lineageTag: 6067fd42-8eef-4625-accc-002321a30470

	measure 'Rolling Meets Session Average Shot ID Min' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-02
			// Description:     The first session shot id for selected sessions where the rolling average meets or exceeds the full session average shot score
			
			VAR _position_if_at_min = -1000
			
			VAR _shot_id_benchmark_table =
			FILTER(
			    ADDCOLUMNS(
			        VALUES( fact_shot_score[session_shot_id] ),
			        "rolling_average_exists", NOT( ISBLANK( [Shot Score Rolling Average Shots] ) ),
			        "rolling_meets_session_average", [Shot Score Rolling Average Shots] >= CALCULATE( [Shot Score Average], ALLSELECTED( fact_shot_score[session_shot_id] ) )
			    ),
			    [rolling_average_exists]
			)
			
			VAR _min_shot_id =
			MINX(
			    _shot_id_benchmark_table,
			    [session_shot_id]
			)
			
			VAR _min_shot_at_avg =
			MINX(
			    FILTER(
			        _shot_id_benchmark_table,
			        [rolling_meets_session_average]
			    ),
			    [session_shot_id]
			)
			
			VAR _result =
			IF(
			    _min_shot_at_avg > _min_shot_id,
			    _min_shot_at_avg,
			    _position_if_at_min
			)
			
			RETURN _result
		formatString: 0
		displayFolder: Shot
		lineageTag: 01ef077e-48dd-49f4-82f1-7a76a1a12f3a

	measure 'Rolling Meets Session Average Shot ID Max' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-02
			// Description:     The last session shot id for selected sessions where the rolling average meets or exceeds the full session average shot score
			
			VAR _position_if_at_max = 1000
			
			VAR _shot_id_benchmark_table =
			FILTER(
			    ADDCOLUMNS(
			        VALUES( fact_shot_score[session_shot_id] ),
			        "rolling_average_exists", NOT( ISBLANK( [Shot Score Rolling Average Shots] ) ),
			        "rolling_meets_session_average", [Shot Score Rolling Average Shots] >= CALCULATE( [Shot Score Average], ALLSELECTED( fact_shot_score[session_shot_id] ) )
			    ),
			    [rolling_average_exists]
			)
			
			VAR _max_shot_id =
			MAXX(
			    _shot_id_benchmark_table,
			    [session_shot_id]
			)
			
			VAR _max_shot_at_avg =
			MAXX(
			    FILTER(
			        _shot_id_benchmark_table,
			        [rolling_meets_session_average]
			    ),
			    [session_shot_id]
			)
			
			VAR _result =
			IF(
			    _max_shot_at_avg < _max_shot_id,
			    _max_shot_at_avg,
			    _position_if_at_max
			)
			
			RETURN _result
		formatString: 0
		displayFolder: Shot
		lineageTag: ae836bad-5516-41c3-a451-e253840f2de2

	measure 'Session Rank' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-30
			// Description:     Session rank by highest session average shot score
			
			RANK(
			    SKIP,
			    ALL( dim_session ),
			    ORDERBY( [Round Score Average], DESC BLANKS LAST, dim_session[session_id], DESC BLANKS LAST )
			)
		formatString: 0
		displayFolder: Session
		lineageTag: 7819e57a-ac6d-42f6-936b-41474bf992ce

	measure 'Session Dates Performance' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-05
			// Description:     Display text for selected session dates for the Performance page
			
			VAR _count_selected_sessions = COUNTROWS( dim_session )
			
			VAR _max_selected_date = MAX( dim_session[date] )
			
			VAR _max_dataset_date =
			CALCULATE(
			    MAX( dim_session[date] ),
			    ALL( dim_session )
			)
			
			VAR _result =
			_max_selected_date &
			SWITCH(
			    TRUE,
			    _count_selected_sessions > 1, " (+" & _count_selected_sessions - 1 & " older sessions)",
			    _max_selected_date = _max_dataset_date, " (latest session)",
			    ""
			)
			
			RETURN _result
		displayFolder: Time
		lineageTag: 2419cabb-9bf8-4f68-92c4-7aa25ea7a1d6

		annotation PBI_FormatHint = {"isText":true}

	measure 'Session Notes Latest' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-02
			// Description:     Notes from the latest selected session
			
			CALCULATE(
			    MAX( dim_session[notes] ),
			    INDEX(
			        1,
			        dim_session,
			        ORDERBY( dim_session[session_id], DESC )
			    )
			)
		displayFolder: Session
		lineageTag: a969c51e-6453-49c7-ba43-df96721e96bd

		annotation PBI_FormatHint = {"isText":true}

	measure 'Session Adjustment Most Recent' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-02
			// Description:     Most recent major adjustment for the latest selected session
			
			VAR _latest_selected_session = MAX( dim_session[session_id] )
			
			VAR _result =
			CALCULATE(
			    MAX( dim_session[major_adjustment] ) & " (" & MAX( dim_session[date] ) & ")",
			    INDEX(
			        1,
			        FILTER(
			            ALL( dim_session ),
			            dim_session[session_id] <= _latest_selected_session && NOT( ISBLANK( dim_session[major_adjustment] ) )
			        ),
			        ORDERBY( dim_session[session_id], DESC )
			    )
			)
			
			RETURN _result
		displayFolder: Session
		lineageTag: d32f3cd1-7abc-41f6-8a30-24f907aa5281

		annotation PBI_FormatHint = {"isText":true}

	measure 'Round Selected Type' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-31
			// Description:     Selected round type as defined by the select_round_type table
			
			SELECTEDVALUE( select_round_type[round_type] )
		displayFolder: Round
		lineageTag: b14d1817-ed85-4c4d-b45a-9253e0db7d43

		annotation PBI_FormatHint = {"isText":true}

	measure 'Days Since Previous Session' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2024-12-23
			// Description:     Number of days since the previous session
			
			MIN( dim_session[days_since_previous_session] )
		formatString: 0
		displayFolder: Time
		lineageTag: 6733a7a0-92d5-4f2d-b979-a6c92845316a

	measure 'Shot Score Performance Against Benchmark' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-05
			// Description:     Shot Score Average minus benchmark value
			
			VAR _score_multiplier = SELECTEDVALUE( select_round_type[shot_count], 1 )
			
			VAR _raw_score_difference =
			CALCULATE(
			    [Shot Score Average],
			    calc_grp_formulas[formula] = "Neighboring Sessions Difference"
			)
			
			VAR _result = _score_multiplier * _raw_score_difference
			
			RETURN _result
		displayFolder: Shot
		lineageTag: 9721f256-1e14-415d-b8eb-2a335bb676ff

		formatStringDefinition = SELECTEDVALUE( select_round_type[display_format], "0.0" )

	measure 'Shot Count Per End Max' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-03
			// Description:     Max count of shots per end
			
			MAX( dim_session[shot_count_per_end] )
		formatString: 0.0
		displayFolder: End
		lineageTag: 1fe63990-cd04-474d-99b5-45ff3b969281

	measure 'Day of Week Number' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-01
			// Description:     Day of week number of the current date
			
			MIN( dim_calendar[day_of_week_number] )
		formatString: 0
		displayFolder: Time
		lineageTag: 6f6ffb2e-f9cc-4d0a-bc38-abf1057017c4

	measure 'Shot Count Per Session Max' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-03
			// Description:     Max count of shots per session
			
			MAX( fact_shot_score[session_shot_id] )
		formatString: 0
		displayFolder: Session
		lineageTag: 16a5fb45-9073-4aa6-aee1-861dbfcf8e12

	measure 'Session Date Range Improvements' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-05
			// Description:     Display text for selected date range for the Improvement and Fatigue pages
			
			VAR _range_end_date = MAX( select_session_end_date[date] )
			
			VAR _range_start_date =
			CALCULATE(
			    MIN( dim_session[date] ),
			    calc_grp_sessions[sessions] = "Selected Range"
			)
			
			VAR _range_length =
			CALCULATE(
			    COUNTROWS( dim_session ),
			    calc_grp_sessions[sessions] = "Selected Range"
			)
			
			VAR _result =
			_range_start_date & " - " & _range_end_date & " (" & _range_length & " sessions)"
			
			RETURN _result
		displayFolder: Time
		lineageTag: 708de027-4d4c-43fc-bab4-07d0bb071a5b

		annotation PBI_FormatHint = {"isText":true}

	measure 'Days Since Prev Correlation Coef' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-07
			// Description:     Correlation coefficient for performance against benchmark and days since previous session
			
			CALCULATE(
			    [Days Since Previous Session],
			    calc_grp_formulas[formula] = "Performance Correlation Coefficient"
			)
		formatString: 0.00
		displayFolder: Correlations
		lineageTag: fa7330d8-6088-450d-a880-78f1415ae7cb

	measure 'Days Since Prev Correlation Desc' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-07
			// Description:     Correlation description for performance against benchmark and days since previous session
			
			CALCULATE(
			    [Days Since Previous Session],
			    calc_grp_formulas[formula] = "Performance Correlation Description"
			)
		displayFolder: Correlations
		lineageTag: b4c535c2-8a72-4771-9635-3ce6da74170b

		annotation PBI_FormatHint = {"isText":true}

	measure 'Shots Per Session Correlation Coef' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-07
			// Description:     Correlation coefficient for performance against benchmark and count of shots per session
			
			CALCULATE(
			    [Shot Count],
			    calc_grp_formulas[formula] = "Performance Correlation Coefficient"
			)
		formatString: 0.00
		displayFolder: Correlations
		lineageTag: 525bfea6-360a-40e7-9bcb-53e75b69d924

	measure 'Shots Per Session Correlation Desc' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-07
			// Description:     Correlation description for performance against benchmark and count of shots per session
			
			CALCULATE(
			    [Shot Count],
			    calc_grp_formulas[formula] = "Performance Correlation Description"
			)
		displayFolder: Correlations
		lineageTag: 76007cb8-378a-4dd0-b1d4-0778712784fc

		annotation PBI_FormatHint = {"isText":true}

	measure 'Shots Per End Correlation Coef' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-07
			// Description:     Correlation coefficient for performance against benchmark and count of shots per end
			
			CALCULATE(
			    [Shot Count Per End Max],
			    calc_grp_formulas[formula] = "Performance Correlation Coefficient"
			)
		formatString: 0.00
		displayFolder: Correlations
		lineageTag: 6437fcc6-95a5-422f-b672-56079f4957c2

	measure 'Shots Per End Correlation Desc' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-07
			// Description:     Correlation description for performance against benchmark and count of shots per end
			
			CALCULATE(
			    [Shot Count Per End Max],
			    calc_grp_formulas[formula] = "Performance Correlation Description"
			)
		displayFolder: Correlations
		lineageTag: aafbcb26-437e-4f1c-b1c0-aa2b4da520fa

		annotation PBI_FormatHint = {"isText":true}

	measure 'Day of Week Correlation Coef' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-07
			// Description:     Correlation coefficient for performance against benchmark and day of week number
			
			CALCULATE(
			    [Day of Week Number],
			    calc_grp_formulas[formula] = "Performance Correlation Coefficient"
			)
		formatString: 0.00
		displayFolder: Correlations
		lineageTag: 96d5d791-327f-4c0c-9a94-62e039d918ee

	measure 'Day of Week Correlation Desc' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-07
			// Description:     Correlation description for performance against benchmark and day of week number
			
			CALCULATE(
			    [Day of Week Number],
			    calc_grp_formulas[formula] = "Performance Correlation Description"
			)
		displayFolder: Correlations
		lineageTag: 8994be80-5da6-406e-aaae-034f07773ef2

		annotation PBI_FormatHint = {"isText":true}

	measure 'Day of Week Correlation Color' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-07
			// Description:     Correlation color step value for performance against benchmark and day of week number
			
			CALCULATE(
			    [Day of Week Number],
			    calc_grp_formulas[formula] = "Performance Correlation Color Step"
			)
		formatString: 0
		displayFolder: Correlations
		lineageTag: 80e904dc-2d9c-4490-af66-d2cb0f4e946a

	measure 'Days Since Prev Correlation Color' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-07
			// Description:     Correlation color step value for performance against benchmark and days since previous session
			
			CALCULATE(
			    [Days Since Previous Session],
			    calc_grp_formulas[formula] = "Performance Correlation Color Step"
			)
		formatString: 0
		displayFolder: Correlations
		lineageTag: 206f416c-9348-4853-bc32-3d71f765fa22

	measure 'Shots Per End Correlation Color' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-07
			// Description:     Correlation color step value for performance against benchmark and count of shots per end
			
			CALCULATE(
			    [Shot Count Per End Max],
			    calc_grp_formulas[formula] = "Performance Correlation Color Step"
			)
		formatString: 0
		displayFolder: Correlations
		lineageTag: 1c66542c-7242-4785-b542-4139eba3bd15

	measure 'Shots Per Session Correlation Color' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-07
			// Description:     Correlation color step value for performance against benchmark and count of shots per session
			
			CALCULATE(
			    [Shot Count],
			    calc_grp_formulas[formula] = "Performance Correlation Color Step"
			)
		formatString: 0
		displayFolder: Correlations
		lineageTag: 1ce06bce-bb97-4d23-9eae-d846c52da4fb

	measure 'Data Table Values' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-11
			// Description:     Values for raw data matrix
			
			// Get selected values from sort settings table
			VAR _selected_sort_column = SELECTEDVALUE( select_data_table_sort[column_name] )
			VAR _selected_sort_multiplier = SELECTEDVALUE( select_data_table_sort[sort_multiplier] )
			
			// Get selected values from matrix columns table
			VAR _selected_column = SELECTEDVALUE( select_data_table_columns[column_name], _selected_sort_column )
			VAR _is_total = NOT( HASONEVALUE( select_data_table_columns[column_name] ) )
			
			// Calculate value of selected cell
			VAR _cell_value =
			SWITCH(
			    _selected_column,
			    "Date", MAX( dim_session[date] ),
			    "Session Avg Score", [Shot Score Average],
			    "Days Since Prev Session", [Days Since Previous Session],
			    "Total Ends", [End Count],
			    "Total Shots", [Shot Count],
			    "Shots per End", [Shot Count Per End Max],
			    "Notes", [Data Table Notes Icon Text],
			    [Data Table End Score Average]
			)
			
			// Apply multiplier if value is a total and used for sorting
			VAR _result =
			IF(
			    _is_total,
			    _cell_value * _selected_sort_multiplier,
			    _cell_value
			)
			
			RETURN _result
		displayFolder: Data Table
		lineageTag: 23463c1b-4620-44e4-ae0a-aef35606aac8

		formatStringDefinition = SELECTEDVALUE( select_data_table_columns[display_format] )

	measure 'Data Table Colors' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-12
			// Description:     Conditional background color index for raw data matrix
			
			VAR _selected_level = SELECTEDVALUE( select_data_table_columns[level] )
			
			VAR _data_table_color =
			CALCULATE(
			    [Data Table Values],
			    calc_grp_formulas[formula] = "Data Table Score Color"
			)
			
			VAR _result =
			IF(
			    _selected_level = "end",
			    _data_table_color
			)
			
			RETURN _result
		displayFolder: Data Table
		lineageTag: 7a63bb75-4447-46f2-a85d-90d2f2bbc48e

		annotation PBI_FormatHint = {"isText":true}

	measure 'Session Adjustment Selected' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-08
			// Description:     Major adjustment for the selected session
			
			SELECTEDVALUE( dim_session[major_adjustment] )
		displayFolder: Session
		lineageTag: 7fee0b68-2437-4541-84ce-8a32069dcd80

		annotation PBI_FormatHint = {"isText":true}

	measure 'Data Table Notes Icon Text' = ```
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-12
			// Description:     Text icons for raw data matrix Notes column
			
			VAR _has_notes = NOT( ISBLANK( SELECTEDVALUE( dim_session[notes] ) ) )
			VAR _has_major_adjustment = NOT( ISBLANK( SELECTEDVALUE( dim_session[major_adjustment] ) ) )
			
			VAR _result = 
			IF( _has_major_adjustment, UNICHAR( 9873 ) & " " ) &
			IF( _has_notes, UNICHAR( 9998 ) & " " )
			
			RETURN _result
			```
		displayFolder: Data Table
		lineageTag: 5002268e-7c52-4c2c-ad18-27170a517a45

		annotation PBI_FormatHint = {"isText":true}

	measure 'Data Table End Score Average' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-12
			// Description:     Average score for the selected end, used in raw data matrix
			
			VAR _selected_column = SELECTEDVALUE( select_data_table_columns[column_name] )
			VAR _selected_level = SELECTEDVALUE( select_data_table_columns[level] )
			
			VAR _result =
			IF(
			    _selected_level = "end",
			    CALCULATE(
			        [Shot Score Average],
			        fact_shot_score[end] = CONVERT( _selected_column, INTEGER )
			    )
			)
			
			RETURN _result
		formatString: 0.0
		displayFolder: Data Table
		lineageTag: 48389aef-5cf3-4477-9ce5-fe0470a6ecde

	measure 'Data Tooltip Shot Score Average' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-13
			// Description:     Average score for an individual shot based on the end in context in the raw data matrix
			
			VAR _selected_end = SELECTEDVALUE( select_data_table_columns[column_id] ) -- Use column_id because it's already of type int
			
			VAR _result =
			CALCULATE(
			    AVERAGE( fact_shot_score[score] ),
			    fact_shot_score[end] = _selected_end
			)
			
			RETURN _result
		displayFolder: Data Table
		lineageTag: b7df8f34-e9d1-4902-9ef3-e49c711b811f

		formatStringDefinition =
				IF(
				    HASONEVALUE( fact_shot_score[session_shot_id] ),
				    "0",
				    "0.0"
				)

	measure 'Data Tooltip Shot Score Color' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-12
			// Description:     Background color for an individual shot based on the end in context in the raw data matrix
			
			CALCULATE(
			    [Data Tooltip Shot Score Average],
			    calc_grp_formulas[formula] = "Data Table Score Color"
			)
		displayFolder: Data Table
		lineageTag: 85a71d61-04c3-4cfc-a65b-51c1896ede0c

		annotation PBI_FormatHint = {"isText":true}

	measure 'Session Notes Selected' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-12
			// Description:     Notes for the selected session
			
			SELECTEDVALUE( dim_session[notes] )
		displayFolder: Session
		lineageTag: 80d3fdf6-a272-4106-8296-983466e08961

		annotation PBI_FormatHint = {"isText":true}

	measure 'Data Tooltip Shot Count' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-12
			// Description:     Count of shot records that appear in the data table tooltip
			
			VAR _selected_end = SELECTEDVALUE( select_data_table_columns[column_id] ) -- Use column_id because it's already of type int
			
			VAR _result =
			CALCULATE(
			    [Shot Count],
			    fact_shot_score[end] = _selected_end
			)
			
			RETURN _result
		formatString: 0
		displayFolder: Data Table
		lineageTag: 65c12060-32ca-408e-9dec-c3585085200f

	measure 'Data Tooltip Color Text' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-13
			// Description:     Text color with transparency switch for raw data matrix tooltip
			
			IF(
			    SELECTEDVALUE( select_data_table_columns[column_name] ) = "Notes",
			    "#000000FF",
			    "#00000000"
			)
		displayFolder: Data Table
		lineageTag: 04b56f8b-0bc9-4dec-b596-c4990268e2f4

		annotation PBI_FormatHint = {"isText":true}

	measure 'Data Tooltip Color Background' =
			
			// Last Developer:  Lukas Wadya
			// Last Updated:    2025-01-13
			// Description:     Background color with transparency switch for raw data matrix tooltip
			
			IF(
			    SELECTEDVALUE( select_data_table_columns[column_name] ) = "Notes",
			    "#FFFFFFFF",
			    "#FFFFFF00"
			)
		displayFolder: Data Table
		lineageTag: 3adb561b-6f68-4b73-9ce7-249936ebac4e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition 'Measure Table' = m
		mode: import
		queryGroup: 'Table Queries'
		source = #table( {}, {} )

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

