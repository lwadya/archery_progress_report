table calc_grp_formulas
	lineageTag: a2c12ae1-4ff8-4185-abf5-d9851d7f8596

	calculationGroup

		calculationItem Default =
				
				// Last Developer:  Lukas Wadya
				// Last Updated:    2025-01-05
				// Description:     Selected measure with no modifications
				
				SELECTEDMEASURE()

		calculationItem 'Adjustment Current' =
				
				// Last Developer:  Lukas Wadya
				// Last Updated:    2025-01-20
				// Description:     Range of n consecutive sessions starting with the latest major adjustment
				
				VAR _default_max_sessions = 5
				
				VAR _max_sessions = SELECTEDVALUE( select_session_rolling_average[sessions], _default_max_sessions )
				
				VAR _start_session_id =
				CALCULATE(
				    MAX( dim_session[session_id] ),
				    NOT( ISBLANK( dim_session[major_adjustment] ) )
				)
				
				VAR _end_session_id = _start_session_id + _max_sessions
				
				VAR _result =
				CALCULATE(
				    SELECTEDMEASURE(),
				    FILTER(
				        ALL( dim_session ),
				        dim_session[session_id] >= _start_session_id && dim_session[session_id] < _end_session_id
				    )
				)
				
				RETURN
				_result

		calculationItem 'Adjustment Benchmark' =
				
				// Last Developer:  Lukas Wadya
				// Last Updated:    2025-01-05
				// Description:     Equivalent number of sessions to Adjustment Current, but before the selected adjustment
				
				VAR _start_session_id =
				CALCULATE(
				    [Session ID Min],
				    calc_grp_formulas[formula] = "Adjustment Current"
				)
				
				VAR _session_count =
				CALCULATE(
				    [Session Count],
				    calc_grp_formulas[formula] = "Adjustment Current"
				)
				
				VAR _benchmark_end_id = _start_session_id - 1
				VAR _benchmark_start_id = _start_session_id - _session_count
				
				VAR _result =
				CALCULATE(
				    SELECTEDMEASURE(),
				    FILTER(
				        ALL( dim_session ),
				        dim_session[session_id] >= _benchmark_start_id && dim_session[session_id] <= _benchmark_end_id
				    )
				)
				
				RETURN
				_result

		calculationItem 'Adjustment Difference' =
				
				// Last Developer:  Lukas Wadya
				// Last Updated:    2025-01-15
				// Description:     Difference between adjustment period and benchmark period, multiplied by round shot count
				
				VAR _score_multiplier = SELECTEDVALUE( select_round_scoring[shot_count], 1 )
				
				VAR _adjustment_value =
				CALCULATE(
				    SELECTEDMEASURE(),
				    calc_grp_formulas[formula] = "Adjustment Current"
				)
				
				VAR _benchmark_value =
				CALCULATE(
				    SELECTEDMEASURE(),
				    calc_grp_formulas[formula] = "Adjustment Benchmark"
				)
				
				VAR _result =
				IF(
				    NOT( ISBLANK( _adjustment_value ) ) && NOT( ISBLANK( _benchmark_value ) ),
				    (_adjustment_value - _benchmark_value) * _score_multiplier
				)
				
				RETURN
				_result

		calculationItem 'Adjustment Percent Difference' =
				
				// Last Developer:  Lukas Wadya
				// Last Updated:    2025-01-05
				// Description:     Percent difference between adjustment period and benchmark period
				
				VAR _adjustment_value =
				CALCULATE(
				    SELECTEDMEASURE(),
				    calc_grp_formulas[formula] = "Adjustment Current"
				)
				
				VAR _benchmark_value =
				CALCULATE(
				    SELECTEDMEASURE(),
				    calc_grp_formulas[formula] = "Adjustment Benchmark"
				)
				
				VAR _result =
				IF(
				    NOT( ISBLANK( _adjustment_value ) ) && NOT( ISBLANK( _benchmark_value ) ),
				    DIVIDE(
				        _adjustment_value - _benchmark_value,
				        _benchmark_value
				    )
				)
				
				RETURN
				_result

			formatStringDefinition = "0.0%"

		calculationItem 'Data Table Score Color' =
				
				// Last Developer:  Lukas Wadya
				// Last Updated:    2025-01-16
				// Description:     Background color for scores in the raw data matrix
				
				VAR _value = SELECTEDMEASURE()
				
				VAR _result =
				SWITCH(
				    TRUE(),
				    _value = 10, SELECTEDVALUE( select_data_table_colors[color_10] ),   // yellow
				    _value >= 9, SELECTEDVALUE( select_data_table_colors[color_9] ),    // yellow
				    _value >= 8, SELECTEDVALUE( select_data_table_colors[color_8] ),    // red
				    _value >= 7, SELECTEDVALUE( select_data_table_colors[color_7] ),    // red
				    _value >= 6, SELECTEDVALUE( select_data_table_colors[color_6] ),    // blue
				    _value >= 5, SELECTEDVALUE( select_data_table_colors[color_5] ),    // blue
				    _value >= 0, SELECTEDVALUE( select_data_table_colors[color_4_0] ),  // black
				    BLANK()
				)
				
				RETURN _result

	column formula
		dataType: string
		lineageTag: 676e5f0c-1b85-44a1-b5fa-09034ee4e12e
		summarizeBy: none
		sourceColumn: Name
		sortByColumn: Ordinal

		annotation SummarizationSetBy = Automatic

	column Ordinal
		dataType: int64
		formatString: 0
		lineageTag: b5908a60-bc41-43e7-a599-3082b7ad8dd3
		summarizeBy: sum
		sourceColumn: Ordinal

		annotation SummarizationSetBy = Automatic

